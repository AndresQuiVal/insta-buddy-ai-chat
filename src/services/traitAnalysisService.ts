
interface Trait {
  trait: string;
  enabled: boolean;
  position: number;
}

interface AnalysisResult {
  matchPoints: number;
  metTraits: string[];
  metTraitIndices: number[];
}

export const analyzeMessage = async (messageText: string, idealTraits: Trait[]): Promise<AnalysisResult> => {
  if (!messageText || idealTraits.length === 0) {
    return { matchPoints: 0, metTraits: [], metTraitIndices: [] };
  }

  console.log("üîç ANALIZANDO MENSAJE COMPLETO:", messageText.substring(0, 200) + "...");
  
  const enabledTraits = idealTraits.filter(t => t.enabled);
  if (enabledTraits.length === 0) {
    return { matchPoints: 0, metTraits: [], metTraitIndices: [] };
  }

  // Normalizar texto para an√°lisis
  const conversationText = messageText.toLowerCase()
    .normalize('NFD')
    .replace(/[\u0300-\u036f]/g, '') // Quitar acentos
    .replace(/[^\w\s]/g, ' ') // Reemplazar puntuaci√≥n con espacios
    .replace(/\s+/g, ' ') // Normalizar espacios
    .trim();
  
  console.log("üìù Texto normalizado para an√°lisis:", conversationText.substring(0, 200) + "...");
  
  // Mapa de palabras clave MEJORADO y m√°s espec√≠fico
  const keywordMap: Record<string, string[]> = {
    "Interesado en nuestros productos o servicios": [
      // Inter√©s directo
      "interesa", "intereso", "me interesa", "estoy interesado", "interesado", "interesada",
      "quiero", "quisiera", "necesito", "busco", "requiero", "solicito",
      "producto", "servicio", "oferta", "promocion", "paquete", "plan",
      "informacion", "info", "detalles", "conocer", "saber",
      "precio", "costo", "cotizacion", "presupuesto", "tarifa",
      "comprar", "adquirir", "contratar", "obtener",
      // Productos espec√≠ficos
      "cruceros", "crucero", "viajes", "viaje", "tours", "tour", 
      "excursiones", "excursion", "vacaciones", "destinos", "destino",
      "paquetes turisticos", "turismo", "aventura",
      // Expresiones de inter√©s
      "me gusta", "me encanta", "me fascina", "amo", "adoro",
      "cu√©ntame", "dime", "expl√≠came", "h√°blame", "m√°ndame", "env√≠a", "envia",
      "perfecto", "excelente", "genial", "buen√≠simo", "incre√≠ble", "maravilloso",
      "tiene", "tienen", "ofrecen", "manejan", "disponible", "opciones"
    ],
    "Tiene presupuesto adecuado para adquirir nuestras soluciones": [
      // Presupuesto directo
      "presupuesto", "dinero", "efectivo", "pago", "pagar", "pagos",
      "precio", "costo", "cuesta", "vale", "valor", "inversion",
      "puedo pagar", "dispongo", "tengo para", "cuento con",
      "tarjeta", "credito", "financiamiento", "credito", "prestamo",
      // Cantidades y monedas
      "mil", "miles", "pesos", "dolares", "euros", "usd", "mxn",
      "cuanto", "cu√°nto", "costoso", "caro", "barato", "economico",
      "accesible", "asequible", "vale la pena", "inversion",
      // Modalidades de pago
      "meses", "cuotas", "mensualidades", "abonos", "plazos",
      "contado", "una sola exhibicion", "financiar"
    ],
    "Est√° listo para tomar una decisi√≥n de compra": [
      // Decisi√≥n inmediata
      "decidido", "decidida", "listo", "lista", "preparado", "preparada",
      "comprar", "adquirir", "contratar", "reservar", "apartar",
      "ahora", "ya", "hoy", "inmediato", "pronto", "rapido",
      "cuando", "fecha", "programar", "agendar", "confirmar",
      // Urgencia
      "urgente", "necesito ya", "lo antes posible", "cuanto antes",
      "este mes", "esta semana", "ma√±ana", "siguiente",
      // Confirmaci√≥n
      "perfecto", "de acuerdo", "acepto", "si", "s√≠", "claro",
      "por supuesto", "esta bien", "est√° bien", "okay", "ok",
      "adelante", "hagamos", "vamos", "proceder", "seguir"
    ],
    "Se encuentra en nuestra zona de servicio": [
      // Ubicaci√≥n
      "vivo", "vivo en", "estoy en", "me encuentro", "ubicado", "radico",
      "direccion", "domicilio", "casa", "oficina", "trabajo",
      "ciudad", "estado", "pais", "zona", "region", "area",
      "cerca", "lejos", "distancia", "ubicacion",
      // Lugares espec√≠ficos
      "mexico", "m√©xico", "cdmx", "ciudad de mexico", "df",
      "guadalajara", "monterrey", "puebla", "cancun", "merida",
      "tijuana", "leon", "queretaro", "toluca", "aguascalientes",
      "morelia", "saltillo", "hermosillo", "culiacan", "chihuahua",
      // Servicios de ubicaci√≥n
      "envio", "entrega", "domicilio", "env√≠o a", "llegan a",
      "calle", "avenida", "colonia", "fraccionamiento", "municipio",
      "delegacion", "alcaldia", "codigo postal", "cp"
    ]
  };
  
  const metTraits: string[] = [];
  const metTraitIndices: number[] = [];
  
  enabledTraits.forEach((trait, idx) => {
    const keywords = keywordMap[trait.trait] || [];
    
    console.log(`üéØ Analizando caracter√≠stica: "${trait.trait}"`);
    console.log(`   Palabras clave a buscar: ${keywords.slice(0, 10).join(', ')}...`);
    
    // Buscar coincidencias m√°s inteligentes
    let matchFound = false;
    const foundKeywords: string[] = [];
    
    for (const keyword of keywords) {
      // Buscar palabra completa o como parte de una palabra m√°s larga
      const regex = new RegExp(`\\b${keyword.replace(/[.*+?^${}()|[\]\\]/g, '\\$&')}`, 'i');
      if (regex.test(conversationText) || conversationText.includes(keyword.toLowerCase())) {
        matchFound = true;
        foundKeywords.push(keyword);
      }
    }
    
    console.log(`   Palabras encontradas: ${foundKeywords.join(', ')}`);
    console.log(`   ¬øCoincidencia?: ${matchFound ? '‚úÖ S√ç' : '‚ùå NO'}`);
    
    if (matchFound) {
      metTraits.push(trait.trait);
      metTraitIndices.push(idx);
      console.log(`‚úÖ CARACTER√çSTICA CUMPLIDA: ${trait.trait}`);
    }
  });
  
  const matchPoints = metTraits.length;
  
  console.log("üìä RESULTADO FINAL DEL AN√ÅLISIS:");
  console.log(`   Caracter√≠sticas detectadas: ${metTraits.length}/${enabledTraits.length}`);
  console.log(`   Puntos de compatibilidad: ${matchPoints}`);
  console.log(`   Caracter√≠sticas cumplidas: ${metTraits.join(', ')}`);
  
  return { matchPoints, metTraits, metTraitIndices };
};
